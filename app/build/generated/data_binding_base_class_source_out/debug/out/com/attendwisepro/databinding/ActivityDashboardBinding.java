// Generated by view binder compiler. Do not edit!
package com.attendwisepro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.attendwisepro.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDashboardBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final LinearLayout dashboardContent;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final TextView employeePercentText;

  @NonNull
  public final ProgressBar employeeProgress;

  @NonNull
  public final TextView employeesAbsentCount;

  @NonNull
  public final TextView employeesPresentCount;

  @NonNull
  public final TextView employeesTotalCount;

  @NonNull
  public final TextView learnerPercentText;

  @NonNull
  public final ProgressBar learnerProgress;

  @NonNull
  public final TextView learnersAbsentCount;

  @NonNull
  public final TextView learnersPresentCount;

  @NonNull
  public final TextView learnersTotalCount;

  @NonNull
  public final NavigationView navView;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recentActivityRecyclerView;

  @NonNull
  public final MaterialCardView scanQrCard;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final MaterialCardView viewEmployeeCard;

  @NonNull
  public final MaterialCardView viewIncidentsCard;

  @NonNull
  public final MaterialCardView viewLearnerCard;

  @NonNull
  public final MaterialCardView viewReportsCard;

  @NonNull
  public final MaterialCardView viewVisitorsCard;

  private ActivityDashboardBinding(@NonNull DrawerLayout rootView,
      @NonNull LinearLayout dashboardContent, @NonNull DrawerLayout drawerLayout,
      @NonNull TextView employeePercentText, @NonNull ProgressBar employeeProgress,
      @NonNull TextView employeesAbsentCount, @NonNull TextView employeesPresentCount,
      @NonNull TextView employeesTotalCount, @NonNull TextView learnerPercentText,
      @NonNull ProgressBar learnerProgress, @NonNull TextView learnersAbsentCount,
      @NonNull TextView learnersPresentCount, @NonNull TextView learnersTotalCount,
      @NonNull NavigationView navView, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recentActivityRecyclerView, @NonNull MaterialCardView scanQrCard,
      @NonNull Toolbar toolbar, @NonNull MaterialCardView viewEmployeeCard,
      @NonNull MaterialCardView viewIncidentsCard, @NonNull MaterialCardView viewLearnerCard,
      @NonNull MaterialCardView viewReportsCard, @NonNull MaterialCardView viewVisitorsCard) {
    this.rootView = rootView;
    this.dashboardContent = dashboardContent;
    this.drawerLayout = drawerLayout;
    this.employeePercentText = employeePercentText;
    this.employeeProgress = employeeProgress;
    this.employeesAbsentCount = employeesAbsentCount;
    this.employeesPresentCount = employeesPresentCount;
    this.employeesTotalCount = employeesTotalCount;
    this.learnerPercentText = learnerPercentText;
    this.learnerProgress = learnerProgress;
    this.learnersAbsentCount = learnersAbsentCount;
    this.learnersPresentCount = learnersPresentCount;
    this.learnersTotalCount = learnersTotalCount;
    this.navView = navView;
    this.progressBar = progressBar;
    this.recentActivityRecyclerView = recentActivityRecyclerView;
    this.scanQrCard = scanQrCard;
    this.toolbar = toolbar;
    this.viewEmployeeCard = viewEmployeeCard;
    this.viewIncidentsCard = viewIncidentsCard;
    this.viewLearnerCard = viewLearnerCard;
    this.viewReportsCard = viewReportsCard;
    this.viewVisitorsCard = viewVisitorsCard;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dashboardContent;
      LinearLayout dashboardContent = ViewBindings.findChildViewById(rootView, id);
      if (dashboardContent == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.employeePercentText;
      TextView employeePercentText = ViewBindings.findChildViewById(rootView, id);
      if (employeePercentText == null) {
        break missingId;
      }

      id = R.id.employeeProgress;
      ProgressBar employeeProgress = ViewBindings.findChildViewById(rootView, id);
      if (employeeProgress == null) {
        break missingId;
      }

      id = R.id.employeesAbsentCount;
      TextView employeesAbsentCount = ViewBindings.findChildViewById(rootView, id);
      if (employeesAbsentCount == null) {
        break missingId;
      }

      id = R.id.employeesPresentCount;
      TextView employeesPresentCount = ViewBindings.findChildViewById(rootView, id);
      if (employeesPresentCount == null) {
        break missingId;
      }

      id = R.id.employeesTotalCount;
      TextView employeesTotalCount = ViewBindings.findChildViewById(rootView, id);
      if (employeesTotalCount == null) {
        break missingId;
      }

      id = R.id.learnerPercentText;
      TextView learnerPercentText = ViewBindings.findChildViewById(rootView, id);
      if (learnerPercentText == null) {
        break missingId;
      }

      id = R.id.learnerProgress;
      ProgressBar learnerProgress = ViewBindings.findChildViewById(rootView, id);
      if (learnerProgress == null) {
        break missingId;
      }

      id = R.id.learnersAbsentCount;
      TextView learnersAbsentCount = ViewBindings.findChildViewById(rootView, id);
      if (learnersAbsentCount == null) {
        break missingId;
      }

      id = R.id.learnersPresentCount;
      TextView learnersPresentCount = ViewBindings.findChildViewById(rootView, id);
      if (learnersPresentCount == null) {
        break missingId;
      }

      id = R.id.learnersTotalCount;
      TextView learnersTotalCount = ViewBindings.findChildViewById(rootView, id);
      if (learnersTotalCount == null) {
        break missingId;
      }

      id = R.id.nav_view;
      NavigationView navView = ViewBindings.findChildViewById(rootView, id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recentActivityRecyclerView;
      RecyclerView recentActivityRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recentActivityRecyclerView == null) {
        break missingId;
      }

      id = R.id.scanQrCard;
      MaterialCardView scanQrCard = ViewBindings.findChildViewById(rootView, id);
      if (scanQrCard == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.viewEmployeeCard;
      MaterialCardView viewEmployeeCard = ViewBindings.findChildViewById(rootView, id);
      if (viewEmployeeCard == null) {
        break missingId;
      }

      id = R.id.viewIncidentsCard;
      MaterialCardView viewIncidentsCard = ViewBindings.findChildViewById(rootView, id);
      if (viewIncidentsCard == null) {
        break missingId;
      }

      id = R.id.viewLearnerCard;
      MaterialCardView viewLearnerCard = ViewBindings.findChildViewById(rootView, id);
      if (viewLearnerCard == null) {
        break missingId;
      }

      id = R.id.viewReportsCard;
      MaterialCardView viewReportsCard = ViewBindings.findChildViewById(rootView, id);
      if (viewReportsCard == null) {
        break missingId;
      }

      id = R.id.viewVisitorsCard;
      MaterialCardView viewVisitorsCard = ViewBindings.findChildViewById(rootView, id);
      if (viewVisitorsCard == null) {
        break missingId;
      }

      return new ActivityDashboardBinding((DrawerLayout) rootView, dashboardContent, drawerLayout,
          employeePercentText, employeeProgress, employeesAbsentCount, employeesPresentCount,
          employeesTotalCount, learnerPercentText, learnerProgress, learnersAbsentCount,
          learnersPresentCount, learnersTotalCount, navView, progressBar,
          recentActivityRecyclerView, scanQrCard, toolbar, viewEmployeeCard, viewIncidentsCard,
          viewLearnerCard, viewReportsCard, viewVisitorsCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
