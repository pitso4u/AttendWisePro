// Generated by view binder compiler. Do not edit!
package com.attendwisepro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.attendwisepro.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddEmployeeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputLayout departmentLayout;

  @NonNull
  public final TextInputLayout emailLayout;

  @NonNull
  public final TextInputLayout employeeIdLayout;

  @NonNull
  public final TextInputLayout nameLayout;

  @NonNull
  public final TextInputLayout positionLayout;

  @NonNull
  public final MaterialButton saveButton;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAddEmployeeBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputLayout departmentLayout, @NonNull TextInputLayout emailLayout,
      @NonNull TextInputLayout employeeIdLayout, @NonNull TextInputLayout nameLayout,
      @NonNull TextInputLayout positionLayout, @NonNull MaterialButton saveButton,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.departmentLayout = departmentLayout;
    this.emailLayout = emailLayout;
    this.employeeIdLayout = employeeIdLayout;
    this.nameLayout = nameLayout;
    this.positionLayout = positionLayout;
    this.saveButton = saveButton;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddEmployeeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddEmployeeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_employee, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddEmployeeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.departmentLayout;
      TextInputLayout departmentLayout = ViewBindings.findChildViewById(rootView, id);
      if (departmentLayout == null) {
        break missingId;
      }

      id = R.id.emailLayout;
      TextInputLayout emailLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailLayout == null) {
        break missingId;
      }

      id = R.id.employeeIdLayout;
      TextInputLayout employeeIdLayout = ViewBindings.findChildViewById(rootView, id);
      if (employeeIdLayout == null) {
        break missingId;
      }

      id = R.id.nameLayout;
      TextInputLayout nameLayout = ViewBindings.findChildViewById(rootView, id);
      if (nameLayout == null) {
        break missingId;
      }

      id = R.id.positionLayout;
      TextInputLayout positionLayout = ViewBindings.findChildViewById(rootView, id);
      if (positionLayout == null) {
        break missingId;
      }

      id = R.id.saveButton;
      MaterialButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddEmployeeBinding((LinearLayout) rootView, departmentLayout, emailLayout,
          employeeIdLayout, nameLayout, positionLayout, saveButton, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
