// Generated by view binder compiler. Do not edit!
package com.attendwisepro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.attendwisepro.R;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAttendanceBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final RecyclerView attendanceRecyclerView;

  @NonNull
  public final AutoCompleteTextView classSpinner;

  @NonNull
  public final TextInputLayout classSpinnerLayout;

  @NonNull
  public final TextInputEditText datePicker;

  @NonNull
  public final TextInputLayout datePickerLayout;

  @NonNull
  public final ExtendedFloatingActionButton submitButton;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAttendanceBinding(@NonNull CoordinatorLayout rootView,
      @NonNull RecyclerView attendanceRecyclerView, @NonNull AutoCompleteTextView classSpinner,
      @NonNull TextInputLayout classSpinnerLayout, @NonNull TextInputEditText datePicker,
      @NonNull TextInputLayout datePickerLayout, @NonNull ExtendedFloatingActionButton submitButton,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.attendanceRecyclerView = attendanceRecyclerView;
    this.classSpinner = classSpinner;
    this.classSpinnerLayout = classSpinnerLayout;
    this.datePicker = datePicker;
    this.datePickerLayout = datePickerLayout;
    this.submitButton = submitButton;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAttendanceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAttendanceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_attendance, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAttendanceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attendanceRecyclerView;
      RecyclerView attendanceRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (attendanceRecyclerView == null) {
        break missingId;
      }

      id = R.id.classSpinner;
      AutoCompleteTextView classSpinner = ViewBindings.findChildViewById(rootView, id);
      if (classSpinner == null) {
        break missingId;
      }

      id = R.id.classSpinnerLayout;
      TextInputLayout classSpinnerLayout = ViewBindings.findChildViewById(rootView, id);
      if (classSpinnerLayout == null) {
        break missingId;
      }

      id = R.id.datePicker;
      TextInputEditText datePicker = ViewBindings.findChildViewById(rootView, id);
      if (datePicker == null) {
        break missingId;
      }

      id = R.id.datePickerLayout;
      TextInputLayout datePickerLayout = ViewBindings.findChildViewById(rootView, id);
      if (datePickerLayout == null) {
        break missingId;
      }

      id = R.id.submitButton;
      ExtendedFloatingActionButton submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAttendanceBinding((CoordinatorLayout) rootView, attendanceRecyclerView,
          classSpinner, classSpinnerLayout, datePicker, datePickerLayout, submitButton, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
